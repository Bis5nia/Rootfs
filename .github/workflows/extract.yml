name: Download Firmware
on:
  workflow_dispatch:
    inputs:
      fw_link:
        description: 'Input firmware link'
        required: true

jobs:
  download:
    name: Download Firmware
    runs-on: ubuntu-latest
    steps:
      - name: Download Fw
        run: |
          wget ${{ github.event.inputs.fw_link }}
          FW_PATH=$(find ./ -name "*img.*")
          echo "FW_PATH=$FW_PATH" >> $GITHUB_ENV

      - name: Extract Fw
        id: extract_fw
        run: |
          if [[ -z "${{ env.FW_PATH }}" ]]; then
              echo "Firmware path is empty. Exiting."
              exit 1
          fi

          # Tentukan nama file hasil ekstraksi
          if [[ ${{ env.FW_PATH }} == *.img.gz ]]; then
              sudo gunzip "${{ env.FW_PATH }}"
              EXTRACTED_FW_PATH="${{ env.FW_PATH%.gz }}"  # Menghapus .gz
          elif [[ ${{ env.FW_PATH }} == *.img.xz ]]; then
              sudo unxz "${{ env.FW_PATH }}"
              EXTRACTED_FW_PATH="${{ env.FW_PATH%.xz }}"  # Menghapus .xz
          else
              echo "Unsupported file type: ${{ env.FW_PATH }}"
              exit 1
          fi

          # Menyimpan hasil ekstraksi ke variabel lingkungan
          echo "EXTRACTED_FW_PATH=${EXTRACTED_FW_PATH}" >> $GITHUB_ENV

      - name: Get Partition Offset
        id: get_offset
        run: |
          fdisk_output=$(fdisk -l "${{ env.EXTRACTED_FW_PATH }}")
          echo "$fdisk_output"
          offset=$(echo "$fdisk_output" | grep "${{ env.EXTRACTED_FW_PATH }}2" | awk '{print $2}')
          partisi_offset=$((offset * 512))
          echo "partisi_offset=$partisi_offset" >> $GITHUB_ENV

      - name: Mount Image
        run: |
          sudo mkdir -p /mnt/openwrt-rootfs
          sudo mount -o loop,offset=${{ env.partisi_offset }} "${{ env.EXTRACTED_FW_PATH }}" /mnt/openwrt-rootfs

      - name: See Directory
        run: |
          pwd
          ls -la
